from config import name


# 24 № 5810 (Уровень: Сложный)
# Текстовый файл содержит строку из заглавных латинских букв X, Y и Z, всего не более чем из 10^6 символов.
# Определите максимальную длину подпоследовательности, состоящей из сочетаний XY, YZ и XYZ.
# Искомая подпоследовательность должна состоять только из пар XY, или только из пар YZ,
# или только из троек XYZ,
# или только из пар XY, YZ и троек XYZ в произвольном порядке следования этих сочетаний.

"""
f = open('C:/Users/'+ name + '/Downloads/24_5810.txt').read().strip()

k = km = 0
while 'XYZ' in f:
    f = f.replace('XYZ', '3')

while 'XY' in f:
    f = f.replace('XY', '2')

while 'YZ' in f:
    f = f.replace('YZ', '2')

f = f.replace('X', ' ').replace('Y', ' ').replace('Z', ' ').split()

for i in range(len(f)):
    m = f[i]
    k = 0
    for j in range(len(m)):
        if m[j] == '2':
            k += 2
            km = max(km, k)
        elif m[j] == '3':
            k += 3
            km = max(km, k)
        else:
            k = 0

print(km)
"""



# 24 № 5888 Danov2301 (Уровень: Сложный)

# (А.Богданов) Строка содержит символы латинского алфавита.
# Определите максимальную длину подстроки не содержащей подстрок,
# отличающейся от «DANOV» лишь на одну букву.

"""
f = open('C:/Users/'+ name + '/Downloads/24_5888.txt').read().strip()

k = km = 0

for i in range(len(f) - 4):
    if sum( x == y for x, y in zip('DANOV', f[i:i+5])) == 4:
        k = 0
    else:
        k += 1
        km = max(k, km)

print(km + 4)
"""


# 24 № 5955 (Уровень: Средний)
# Текстовый файл состоит из символов A, C, D, F и O.
# Определите максимальное количество идущих подряд символов, среди которых нет подстроки вида
# согласная + гласная + гласная + согласная
# в прилагаемом файле.
# Для выполнения этого задания следует написать программу.

"""
f = open('C:/Users/'+ name + '/Downloads/24_5955.txt').read().strip()

f = f.replace('A', '0').replace('C', '1').replace('D', '1').replace('F', '1').replace('O', '0')

while '1001' in f:
    f = f.replace('1001', '100 001')

f = f.split()
k = 0

for i in range(len(f)):
    k = max(k, len(f[i]))
print(k)
"""



# 24 № 6029 ФИПИ 03.02.23 (Уровень: Базовый)
# Текстовый файл состоит из символов E, D и F.
# Определите максимальную длину непрерывной последовательности символов,
# состоящей из чередующихся символов E и F в прилагаемом файле.
# Искомая последовательность может начинаться как с символа E, так и с символа F.
# Для выполнения этого задания следует написать программу.


# хз как это работает пздц
"""
f = open('C:/Users/'+ name + '/Downloads/24_6029.txt').read().strip().split('D')

kmax = 0

for j in f:
    k = 1

    for i in range(0, len(j) - 1, 2):
        if j[i] + j[i + 1] == 'FE':
            k += 2
            kmax = max(k, kmax)
        else:
            k = 1
print(kmax)
"""



# 24 № 6054 ФИПИ 04.02.23 (Уровень: Базовый)
# Текстовый файл состоит из символов A, B, C.
# Определите максимальную длину подпоследовательности подряд идущих символов, состоящую из троек вида
# согласная + согласная + гласная
# Например, для строки ABBACCABC искомая последовательность - это BBACCA, и ответом является 6.


"""
f = open('C:/Users/*/Downloads/24_6054.txt').read().strip()

l = list(f)
mx = 0
k = 0

for i in range(len(l)):
    if l[i] in 'BC' : l[i] = '1'
    else: l[i] = '0'

l = ''.join(l)

l = l.replace('110', 'X')

for i in l:
    if i == 'X':
        k += 1
        mx = max(k, mx)
    else:
        k = 0
print(mx * 3)
"""



# Текстовый файл состоит не более чем из 1 200 000 символов X, Y, и Z.
# Определите максимальное количество идущих подряд пар символов вида
# согласная + гласная
# среди которых нет подстроки XYZY. / XYXY ZYXY ZYZY
# Для выполнения этого задания следует написать программу.
# Примечание. Букву Y считайте всегда гласной.
# 24 № 6094 /dev/inf 02.2023 (Уровень: Средний)


"""
s = open('C:/Users/*/Downloads/24_6094.txt').read().strip()

mx = 0

s = s.split('XYZY')

for i in s:
    i = i.replace('XY', 'A').replace('ZY', 'B')
    i = i.replace('X', ' ').replace('Y', ' ').replace('Z', ' ')
    i = i.split(' ')

    for k in i:
        mx = max(mx, len(k))
        if len(k) == 7:
            print(i, k)
print(mx)
"""
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.

# 1. Строится двоичная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
# а) если сумма цифр в двоичной записи числа чётная, то к этой записи справа дописывается 0, а затем два левых разряда заменяются на 1;
# б) если сумма цифр в двоичной записи числа нечётная, то к этой записи справа дописывается 1, а затем два левых разряда заменяются на 11.

# Полученная таким образом запись является двоичной записью искомого числа R.
# Например, для исходного числа 6_10 = 110_2 результатом является число 100_2 = 4_10, а для исходного числа 4_10 = 100_2 результатом является число 1101_2 = 13_10.
# Укажите число N, после обработки которого с помощью этого алгоритма получается наименьшее значение R, большее 25. В ответе запишите это число в десятичной системе счисления.


for N in range(100):
    Nb = list(str(bin(N)[2:]))

    if Nb.count('1') % 2 == 0:
        Nb.append('0')
        Nb = ['1'] + Nb[2:]
    else:
        Nb.append('1')
        Nb= ['11'] + Nb[2:]

    R = int(''.join(Nb), 2)

    if R == 26:
        print(N, R)




# По каналу связи передаются трехзначные числа. Для каждой пары таких чисел строится контрольная сумма,
# необходимая для обнаружения ошибок при передаче. Контрольная сумма строится следующим образом:

# 1. записывается сумма разрядов сотен исходных чисел
# 2. справа дописывается сумма разрядов десятков исходных чисел
# 3. слева дописывается сумма разрядов единиц исходных чисел
# 4. контрольная сумма — это три цифры полученного числа: число тысяч, сотен и десятков.

# Пример: передаются числа 473 и 934. Сумма разрядов сотен равна 13, сумма разрядов десятков равна 10,
# сумма разрядов единиц 7. Получаем число 71310, контрольная сумма 131.
# Определите, при каком наибольшем значении первого числа пары контрольная сумма будет равна 2?
# 199 100   929
"""
def find(x, y):
    k = f'{x % 10 + y % 10}{x // 100 + y // 100}{x // 10 % 10 + y // 10 % 10}'

    return int(k) // 10 % 1000

for i in range(100, 1000):
    for j in range(100, 1000):
        if i > j and find(i, j) == 2:
            print(i, j)

"""









"""
# ------------------------------------------------------------------------------------------
for N in range(100):
    binN = str(bin(N)[2:])

    binN = binN + f'{binN.count("1") % 2}'
    binN = binN + f'{binN.count("1") % 2}'


    R = int(binN, 2)

    if R > 83:
        print(N, R)


for N in range(100):
    binN = str(bin(N)[2:])

    if binN.count('1') % 2 != 0:
        binN += '11'
    else:
        binN += '00'

    R = int(binN, 2)

    if R > 114:
        print(N, R)


for N in range(100):
    binN = str(bin(N)[2:])

    binN = binN + f'{binN.count("1") % 2}'
    binN = binN + f'{binN.count("1") % 2}'

    R = int(binN, 2)

    if R > 97:
        print(N, R)
"""


